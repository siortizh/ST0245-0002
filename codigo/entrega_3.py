# -*- coding: utf-8 -*-
"""Entrega_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qLLZRg_rvW_e4B3IyxBz1_fc8d5mDfpV
"""

import pandas as pd
import networkx as nx
import pydeck
archivo = pd.read_csv("https://raw.githubusercontent.com/siortizh/ST0245-002/master/codigo/calles_de_medellin_con_acoso.csv", sep=";")

origen=str(input("Ingrese coordenadas de origen (latitud, logintud)"))
destino=str(input("Ingrese coordenadas de destino (latitud, logintud)"))

coordenadas=archivo.fillna(0)
coordenadas["multiplicacion"]=coordenadas["harassmentRisk"]*coordenadas["length"]

coordenadas

Dis_corta=nx.from_pandas_edgelist(coordenadas, source="origin", target="destination", edge_attr="length")
acoso_corta=nx.from_pandas_edgelist(coordenadas, source="origin", target="destination", edge_attr="harassmentRisk")
multi=nx.from_pandas_edgelist(coordenadas, source="origin", target="destination", edge_attr="multiplicacion")

#Menor distancia y acoso en las rutas 
length=nx.dijkstra_path(Dis_corta, origen, destino, weight='length')
harassmentRisk=nx.dijkstra_path(acoso_corta, origen, destino, weight='harassmentRisk')
x=nx.dijkstra_path(multi,origen, destino, weight='multiplicacion')

dt=pd.DataFrame(length, columns=["Distancia m√°s corta"])
hr=pd.DataFrame(harassmentRisk, columns=["Distancia con menos acoso"])
ml=pd.DataFrame(x, columns=["Acoso y distancia"])
print("La distancia mas corta es: \n")
print(dt)

print("La distancia menos acoso es: \n")
print(hr)

print("Ruta acoso y distancia es: \n")
print(ml)